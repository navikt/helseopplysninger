version: '3.7'

services:
  # A mock implementation of an oauth2\openid authorization-server.
  # Must add 127.0.0.1 mock-oauth2-service to hosts file in order for issuer to be correct when testing from host.
  mock-oauth2-server:
    image: ghcr.io/navikt/mock-oauth2-server:0.3.3
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      SERVER_PORT: 8081
      JSON_CONFIG_PATH: /etc/oauth-mock-config.json
    volumes:
      - ../../.docker/config/oauth-mock-config.json:/etc/oauth-mock-config.json
    env_file:
      - autotest.env

  # The FHIR REST API exposed to external consumers, e.g. EHRs.
  hops-api:
    image: ghcr.io/navikt/hops-api
    ports:
      - 8082:8080
    env_file:
      - autotest.env


  # hops-oppslag provides a facade with a common REST API and security-mechanism towards external dependencies.
  hops-oppslag:
    image: ghcr.io/navikt/hops-oppslag
    restart: unless-stopped
    ports:
      - 8083:8080
    env_file:
      - autotest.env

  # HAPI FHIR Server is a generic FHIR Server for storing and retrieving FHIR resources through a REST API.
  hops-hapi:
    image: ghcr.io/navikt/hops-hapi-fhir-server
    restart: unless-stopped
    ports:
      - 8084:8080
    env_file:
      - autotest.env

  # hops-bestilling consumes FHIR-messages on Kafka from NAV services and produces responses.
  hops-bestilling:
    image: ghcr.io/navikt/hops-bestilling
    restart: unless-stopped
    ports:
      - 8085:8080
    env_file:
      - autotest.env

  # PostgreSQL is the database used by HAPI-fhir-server.
  postgres:
    image: postgres
    env_file:
      - autotest.env

  # Zookeeper keeps track of status of the Kafka cluster nodes, topics, partitions etc.
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181

  # Apache Kafka broker.
  kafka:
    image: wurstmeister/kafka
    ports:
      - 9092:9092
    env_file:
      - autotest.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
