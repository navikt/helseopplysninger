ktor {
    deployment {
        port = 8080
    }
    application {
        modules = [ fileshare.AppKt.main ]
    }
}

# See https://github.com/navikt/token-support#required-properties-yaml-or-properties
no.nav.security.jwt {
    issuers = [
        {
            issuer_name = "azure-ad"
            issuer_name = ${?AZURE_OPENID_CONFIG_ISSUER}
            discoveryurl = "http://mock-oauth2-service:8081/azure-ad/.well-known/openid-configuration"
            discoveryurl = ${?AZURE_APP_WELL_KNOWN_URL}
            accepted_audience = "helseopplysninger-audience"
            accepted_audience = ${?AZURE_APP_CLIENT_ID}
        },
        {
            issuer_name = "maskinporten"
            requires_scope_claims = "true"
            discoveryurl = "http://mock-oauth2-service:8081/makinporten/.well-known/openid-configuration"
            discoveryurl = ${?MASKINPORTEN_WELL_KNOWN_URL}
            accepted_audience = "https://hops-fileshare.nav.no"
            validation {
               optional_claims = "sub,nbf"
            }
        }
    ]
}

security.scopes {
  upload = "nav:helse:helseopplysninger.write",
  download = "nav:helse:helseopplysninger.read"
}

fileStore {
    baseUrl = "http://localhost:4443"
    baseUrl = ${?FILESTORE_BASEURL}
    bucketName = "hops"
    bucketName = ${?FILESTORE_BUCKET_NAME}
    requiresAuth = "true"
    requiresAuth = ${?FILESTORE_REQUIRES_AUTH}
    tokenFetchUrl = "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token"
    tokenFetchUrl = ${?FILESTORE_TOKEN_FETCH_URL}
    virusScanningEnabled = "true"
    virusScanningEnabled = ${?FILESTORE_VIRUS_SCAN_ENABLED}
    virusScannerUrl = "http://clamav.clamav.svc.cluster.local/scan"
    virusScannerUrl = ${?FILESTORE_VIRUS_SCANNER_URL}
    unScannedBucketName = "hops-unscanned"
    unScannedBucketName = ${?FILESTORE_BUCKET_NAME_UNSCANNED}
}
