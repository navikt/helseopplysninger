name: Auto merge PR

on:
  workflow_run:
    workflows: [ 'Pull request' ]
    types: [ completed ]
    branches:
      - 'dependabot/**'

jobs:
  test:
    name: 🧪 Test
    if: github.actor == 'dependabot[bot]' && github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: 16
          distribution: 'temurin'
          cache: 'gradle'

      - name: 🪲 Run gradle test
        run: ./gradlew test --no-daemon

      - name: 🔑 Generate team token
        uses: navikt/github-app-token-generator@v1
        id: gen-token
        with:
          private-key: ${{ secrets.HOPS_CI_TOOL_PRIVATE_KEY }}
          app-id: ${{ secrets.HOPS_CI_TOOL_APP_ID }}

      - name: 📊 Publish results with dorny
        uses: dorny/test-reporter@v1.5.0
        with:
          name: junit tests
          path: "**/build/test-results/test/TEST-*.xml"
          reporter: java-junit
          token: ${{ steps.gen-token.outputs.token }}

  squash-and-merge:
    name: 🤖 Squash and merge
    if: github.actor == 'dependabot[bot]' && github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: 📖 Fetch pull request info
        id: fetch_pr_info
        run: echo "::set-output name=pr_info::$(curl ${{ github.event.pull_request.url }})"

      - name: 🧬 Check mergable state
        run: |
          if [ "$(echo "$PR_INFO" | jq .mergeable_state -r)" != "clean" ]; then exit 1; fi
          if [ "$(echo "$PR_INFO" | jq .mergeable -r)" != "true" ]; then exit 1; fi
        env:
          PR_INFO: ${{ steps.fetch_pr_info.outputs.pr_info }}

      - name: 🗝️ Generate team token
        uses: navikt/github-app-token-generator@v1
        id: gen-token
        with:
          private-key: ${{ secrets.HOPS_CI_TOOL_PRIVATE_KEY }}
          app-id: ${{ secrets.HOPS_CI_TOOL_APP_ID }}

      - name: 🎨️ Comment on pull-request
        run: gh pr comment $PR_BRANCH --body "State is clean and mergable, will now squash this pull-request."
        env:
          GITHUB_TOKEN: ${{ steps.gen-token.outputs.token }}
          PR_BRANCH: ${{ github.event.workflow_run.head_branch }}
          GH_REPO: ${{ github.repository }}

      - name: 🧩️ Squash and merge
        run: gh pr comment $PR_BRANCH --body "@dependabot squash and merge"
        env:
          GITHUB_TOKEN: ${{ steps.gen-token.outputs.token }}
          PR_BRANCH: ${{ github.event.workflow_run.head_branch }}
          GH_REPO: ${{ github.repository }}
