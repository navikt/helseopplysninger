name: Pull request target

# ╭───────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
# │	  When running pull_request_target we want to ignore all events caused by forks                                   │
# │	  If we want to support pull-request from forks in the future,                                                    │
# │	  make sure they have very limited access/permissions                                                             │
# ╰───────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯

on:
  pull_request_target:
    types: [ opened, labeled, unlabeled, synchronize ]

jobs:

  lint-install:
    name: 🖍️ Lint install
    runs-on: ubuntu-latest
    # Trigger if not from fork
    if: github.event.pull_request.head.repo.full_name == github.repository
    outputs:
      KTLINT_URL: ${{ steps.ktlint-latest.outputs.KTLINT_URL }}
    steps:
      - uses: actions/checkout@v2

      - name: 🔖 Get latest ktlint download-url
        id: ktlint-latest
        run: |
          url=https://api.github.com/repos/pinterest/ktlint/releases/latest
          echo "::set-output name=KTLINT_URL::$(curl -SSL $url | jq .assets[0] | jq .browser_download_url -r)"

      - name: 📌 Cache ktlint
        uses: actions/cache@v2
        id: ktlint-cache
        with:
          path: ktlint
          key: ${{ runner.os }}-${{ steps.ktlint-latest.outputs.KTLINT_URL }}

      - name: 📩 Download ktlint
        if: steps.ktlint-cache.outputs.cache-hit != 'true'
        run: |
          echo ${{ steps.ktlint-latest.outputs.KTLINT_URL }} | wget -qi-
          chmod a+x ktlint

  lint-format:
    name: 🖍 Lint format
    needs: lint-install
    runs-on: ubuntu-latest
    # Trigger if label=format and not by fork
    if: contains(github.event.pull_request.labels.*.name, 'format') && github.event.pull_request.head.repo.full_name == github.repository
    steps:
      - uses: actions/checkout@v2
      - name: 📌 Get ktlint
        uses: actions/cache@v2
        with:
          path: ktlint
          key: ${{ runner.os }}-${{ needs.lint-install.outputs.KTLINT_URL }}
      - run: ./ktlint --format

  lint-check:
    name: 🖍 Lint check
    needs: [ lint-install, lint-format ]
    runs-on: ubuntu-latest
    # Trigger if not from fork and lint-format was success or skipped
    if: |
      always() &&
      github.event.pull_request.head.repo.full_name == github.repository &&
      (needs.lint-format.result == 'success' || needs.lint-format.result == 'skipped')
    steps:
      - uses: actions/checkout@v2

      - name: 📌 Get ktlint
        uses: actions/cache@v2
        id: ktlint-cache
        with:
          path: ktlint
          key: ${{ runner.os }}-${{ needs.lint-install.outputs.KTLINT_URL }}

      - name: ✏️ Run ktlint
        continue-on-error: true
        run: ./ktlint --reporter=checkstyle,output=build/ktlint-report-in-checkstyle-format.xml

      - name: 🎦 Print results
        if: always()
        run: cat build/ktlint-report-in-checkstyle-format.xml

      - name: 📦 Install reviewdog
        uses: reviewdog/action-setup@v1

      - name: 🔑 Generate team token
        uses: navikt/github-app-token-generator@v1
        id: gen-token
        with:
          private-key: ${{ secrets.HOPS_CI_TOOL_PRIVATE_KEY }}
          app-id: ${{ secrets.HOPS_CI_TOOL_APP_ID }}

      - name: 📊 Publish with reviewdog
        run: |
          cat build/ktlint-report-in-checkstyle-format.xml | \
            reviewdog -reporter=github-pr-review -f=checkstyle -diff="git diff" -level=error
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ steps.gen-token.outputs.token }}

  test:
    name: 🧬 Test
    runs-on: ubuntu-latest
    # Trigger if not from fork
    if: github.event.pull_request.head.repo.full_name == github.repository
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v2
        with:
          java-version: 16
          distribution: 'temurin'
          cache: 'gradle'

      - name: 🪲 Run gradle test
        continue-on-error: true
        run: ./gradlew test --continue --no-daemon

      - name: 📊 Publish results with dorny
        uses: dorny/test-reporter@v1.5.0
        with:
          name: junit tests
          path: "**/build/test-results/test/TEST-*.xml"
          reporter: java-junit
          token: ${{ secrets.GITHUB_TOKEN }}

  dependabot-verify:
    name: 🚦Verify dependency version
    runs-on: ubuntu-latest
    # Trigger if actor=dependabot and not by fork
    if: github.actor == 'dependabot[bot]' && github.event.pull_request.head.repo.full_name == github.repository
    steps:
      - name: 🟡️ Fetch metadata
        uses: dependabot/fetch-metadata@v1.1.1
        id: metadata
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔴 Illegal version update
        if: ${{ steps.metadata.outputs.update-type == 'version-update:semver-major' }}
        run: exit 1

      - name: 🟢 Will update
        run: echo "Will update version=${{ steps.metadata.outputs.update-type }}"
